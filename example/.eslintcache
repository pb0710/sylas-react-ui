[{"/Users/pb/code/sylas-react-ui/example/src/App.test.tsx":"1","/Users/pb/code/sylas-react-ui/example/src/App.tsx":"2","/Users/pb/code/sylas-react-ui/example/src/examples/ButtonExample.tsx":"3","/Users/pb/code/sylas-react-ui/example/src/examples/FormExample.tsx":"4","/Users/pb/code/sylas-react-ui/example/src/examples/ListExample.tsx":"5","/Users/pb/code/sylas-react-ui/example/src/examples/LoadingExample.tsx":"6","/Users/pb/code/sylas-react-ui/example/src/examples/MenuExample.tsx":"7","/Users/pb/code/sylas-react-ui/example/src/examples/PopupExample.tsx":"8","/Users/pb/code/sylas-react-ui/example/src/examples/TabsExample.tsx":"9","/Users/pb/code/sylas-react-ui/example/src/examples/TagExample.tsx":"10","/Users/pb/code/sylas-react-ui/example/src/hooks.tsx":"11","/Users/pb/code/sylas-react-ui/example/src/index.tsx":"12","/Users/pb/code/sylas-react-ui/example/src/react-app-env.d.ts":"13","/Users/pb/code/sylas-react-ui/example/src/setupTests.ts":"14"},{"size":243,"mtime":1605520915761,"results":"15","hashOfConfig":"16"},{"size":1633,"mtime":1606282053083,"results":"17","hashOfConfig":"16"},{"size":1981,"mtime":1606027460983,"results":"18","hashOfConfig":"16"},{"size":5069,"mtime":1606272819792,"results":"19","hashOfConfig":"16"},{"size":872,"mtime":1606027460900,"results":"20","hashOfConfig":"16"},{"size":1221,"mtime":1606027460877,"results":"21","hashOfConfig":"16"},{"size":1847,"mtime":1606027460983,"results":"22","hashOfConfig":"16"},{"size":3784,"mtime":1606279055011,"results":"23","hashOfConfig":"16"},{"size":1442,"mtime":1606041571592,"results":"24","hashOfConfig":"16"},{"size":1051,"mtime":1606280541859,"results":"25","hashOfConfig":"16"},{"size":319,"mtime":1605763060269,"results":"26","hashOfConfig":"16"},{"size":484,"mtime":1605520915749,"results":"27","hashOfConfig":"16"},{"size":40,"mtime":1594372452602,"results":"28","hashOfConfig":"16"},{"size":255,"mtime":1594372452603,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7xkwz7",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pb/code/sylas-react-ui/example/src/App.test.tsx",[],"/Users/pb/code/sylas-react-ui/example/src/App.tsx",[],"/Users/pb/code/sylas-react-ui/example/src/examples/ButtonExample.tsx",[],"/Users/pb/code/sylas-react-ui/example/src/examples/FormExample.tsx",["59"],"import * as React from 'react'\nimport { Form, Input, Switch, Select, Button, CheckBox, Radio, Collapse } from 'sylas-react-ui'\nimport { ThemeContext } from '../App'\nimport { useVisible } from '../hooks'\n\nexport default function FormExample() {\n\tconst color = React.useContext(ThemeContext)\n\tconst [visible, toggle] = useVisible(false)\n\n\tconst [form] = Form.useForm()\n\tconst handleFinsh = (values) => {\n\t\tconsole.log('submit finshed values:', values)\n\t}\n\tconst handleFail = (errors) => {\n\t\tconsole.error('submit failed errors:', errors)\n\t}\n\tconst handleValuesChange = (values) => {\n\t\tconsole.log('values changed', values)\n\t}\n\tconst [check, setCheck] = React.useState(true)\n\tconst handleToggle = () => {\n\t\tsetCheck((oldCheck) => !oldCheck)\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Button color={color} light onClick={toggle}>\n\t\t\t\t{visible ? 'Hide' : 'Show'} Form Example\n\t\t\t</Button>\n\t\t\t<Collapse in={visible}>\n\t\t\t\t<div style={{ width: 400, padding: 16 }}>\n\t\t\t\t\t<CheckBox\n\t\t\t\t\t\tstyle={{ marginBottom: 16 }}\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tvalue={check}\n\t\t\t\t\t\tonValueChange={handleToggle}\n\t\t\t\t\t>\n\t\t\t\t\t\tPassword confirm verify is necessary?\n\t\t\t\t\t</CheckBox>\n\t\t\t\t\t<Form\n\t\t\t\t\t\tform={form}\n\t\t\t\t\t\tonFinsh={handleFinsh}\n\t\t\t\t\t\tonFail={handleFail}\n\t\t\t\t\t\tonValuesChange={handleValuesChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\tinitialValue=\"i am a user\"\n\t\t\t\t\t\t\t// validate rules with promise.\n\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalidator(value) {\n\t\t\t\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject('username is required!')\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn Promise.resolve()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input color={color} placeholder=\"username\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tinitialValue=\"\"\n\t\t\t\t\t\t\t// multiple validate rules.\n\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tasync validator(value) {\n\t\t\t\t\t\t\t\t\t\tif (value.length <= 4) {\n\t\t\t\t\t\t\t\t\t\t\t// async function be allow to throw 'explain'. its equal to return Promise.reject('explain').\n\t\t\t\t\t\t\t\t\t\t\tthrow 'password length is greater than 4 digits!'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t(form) => ({\n\t\t\t\t\t\t\t\t\tasync validator(value) {\n\t\t\t\t\t\t\t\t\t\tconst enPattern = new RegExp('^[a-z]+$', 'i')\n\t\t\t\t\t\t\t\t\t\tif (!enPattern.test(value)) {\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject('password must consist of alphabets!')\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t({ getFieldValue, setFieldsValue }) => ({\n\t\t\t\t\t\t\t\t\tasync validator(value) {\n\t\t\t\t\t\t\t\t\t\t// fields linkage\n\t\t\t\t\t\t\t\t\t\tconst confirmPasswordValue = getFieldValue('confirmPassword')\n\t\t\t\t\t\t\t\t\t\tif (value !== confirmPasswordValue) {\n\t\t\t\t\t\t\t\t\t\t\tsetFieldsValue({ confirmPassword: '' })\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input color={color} placeholder=\"password\" type=\"password\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\t\t\tinitialValue=\"\"\n\t\t\t\t\t\t\t// dynamic validate rules.\n\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\tcheck\n\t\t\t\t\t\t\t\t\t? ({ getFieldValue }) => ({\n\t\t\t\t\t\t\t\t\t\t\tasync validator(value) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (value !== getFieldValue('password')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject('Twice inputs are not equal!')\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t// it is equal to validate() { return Promise.resolve() }.\n\t\t\t\t\t\t\t\t\t\t\tasync validator() {}\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input color={color} placeholder=\"confirm password\" type=\"password\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item name=\"selfIntroduction\" initialValue=\"\">\n\t\t\t\t\t\t\t<Input.Textarea color={color} placeholder=\"self introduction\" />\n\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t<Form.Item name=\"switch\" initialValue={false}>\n\t\t\t\t\t\t\t<Switch color={color} description=\"switch\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item name=\"lang\" initialValue=\"en-US\">\n\t\t\t\t\t\t\t<Select color={color} description=\"language\">\n\t\t\t\t\t\t\t\t<Select.Option value=\"en-US\">English</Select.Option>\n\t\t\t\t\t\t\t\t<Select.Option value=\"es-ES\">Español</Select.Option>\n\t\t\t\t\t\t\t\t<Select.Option value=\"ru-RU\">русский</Select.Option>\n\t\t\t\t\t\t\t\t<Select.Option value=\"zh-CN\">简体中文</Select.Option>\n\t\t\t\t\t\t\t\t<Select.Option value=\"zh-TW\">繁體中文</Select.Option>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item name=\"agree\" initialValue={false}>\n\t\t\t\t\t\t\t<CheckBox color={color}>checking means agree to xxxxxxx terms</CheckBox>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tname=\"fruit\"\n\t\t\t\t\t\t\tinitialValue={[\n\t\t\t\t\t\t\t\t{ name: 'apple', value: false },\n\t\t\t\t\t\t\t\t{ name: 'pear', value: true },\n\t\t\t\t\t\t\t\t{ name: 'orange', value: true }\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CheckBox.Group\n\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t{ label: 'Apple', name: 'apple' },\n\t\t\t\t\t\t\t\t\t{ label: 'Pear', name: 'pear' },\n\t\t\t\t\t\t\t\t\t{ label: 'Orange', name: 'orange' }\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item name=\"frontendLibary\" initialValue=\"angular\">\n\t\t\t\t\t\t\t<Radio.Group color={color}>\n\t\t\t\t\t\t\t\t<Radio value=\"angular\">Angular</Radio>\n\t\t\t\t\t\t\t\t<Radio value=\"react\">React</Radio>\n\t\t\t\t\t\t\t\t<Radio value=\"vue\">Vue</Radio>\n\t\t\t\t\t\t\t</Radio.Group>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Button type=\"submit\" color={color}>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</Collapse>\n\t\t</>\n\t)\n}\n","/Users/pb/code/sylas-react-ui/example/src/examples/ListExample.tsx",[],"/Users/pb/code/sylas-react-ui/example/src/examples/LoadingExample.tsx",[],"/Users/pb/code/sylas-react-ui/example/src/examples/MenuExample.tsx",[],"/Users/pb/code/sylas-react-ui/example/src/examples/PopupExample.tsx",[],"/Users/pb/code/sylas-react-ui/example/src/examples/TabsExample.tsx",[],"/Users/pb/code/sylas-react-ui/example/src/examples/TagExample.tsx",[],"/Users/pb/code/sylas-react-ui/example/src/hooks.tsx",[],"/Users/pb/code/sylas-react-ui/example/src/index.tsx",[],"/Users/pb/code/sylas-react-ui/example/src/react-app-env.d.ts",[],"/Users/pb/code/sylas-react-ui/example/src/setupTests.ts",[],{"ruleId":"60","severity":1,"message":"61","line":71,"column":12,"nodeType":"62","messageId":"63","endLine":71,"endColumn":61},"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object"]